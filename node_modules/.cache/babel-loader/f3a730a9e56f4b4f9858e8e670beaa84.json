{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thusk/Documents/CP/Senior Project/frontend/src/Dashboard.jsx\";\nimport React from 'react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageURL: '',\n      responseImgae: null,\n      image_original: null,\n      image_response: null\n    }; // var responseImage \n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  _handleImageChange(e) {\n    console.log('haha');\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        image_original: reader.result\n      });\n      this.setState({\n        image_response: null\n      });\n    };\n\n    reader.readAsDataURL(file);\n    this.handleUploadImage(e);\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    this.setState({\n      image_original: this.uploadInput.files[0]\n    });\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({\n        image_original: reader.result\n      });\n    };\n\n    reader.readAsDataURL(this.uploadInput.files[0]);\n    data.append('file', this.uploadInput.files[0]); // data.append('filename', this.fileName.value);\n\n    var response_image;\n    fetch('https://piclab.ai/foodclassification2020/classify', {\n      method: 'POST',\n      body: data\n    }).then(response => response.blob()).then(response => response.blob()).then(img => {\n      console.log(img); // this.setState({image:img})\n\n      response_image = URL.createObjectURL(img);\n      console.log(response_image);\n      this.setState({\n        image_response: response_image\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleUploadImage,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref => {\n            this.uploadInput = ref;\n          },\n          type: \"file\",\n          onChange: e => this._handleImageChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.image_original,\n        width: \"512\",\n        height: \"512\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.image_response,\n        width: \"512\",\n        height: \"512\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/thusk/Documents/CP/Senior Project/frontend/src/Dashboard.jsx"],"names":["React","Main","Component","constructor","props","state","imageURL","responseImgae","image_original","image_response","handleUploadImage","bind","_handleImageChange","e","console","log","preventDefault","reader","FileReader","file","target","files","onloadend","setState","result","readAsDataURL","ev","data","FormData","uploadInput","append","response_image","fetch","method","body","then","response","blob","img","URL","createObjectURL","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageURL: '',\n      responseImgae: null,\n      image_original: null,\n      image_response: null\n    };\n    // var responseImage \n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  _handleImageChange(e) {\n            console.log('haha')\n            e.preventDefault();\n        \n            let reader = new FileReader();\n            let file = e.target.files[0];\n        \n            reader.onloadend = () => {\n            \n            this.setState({image_original:reader.result})\n            this.setState({image_response:null})\n\n            }\n            reader.readAsDataURL(file)\n      \n            this.handleUploadImage(e)\n        }\n        \n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    this.setState({image_original:this.uploadInput.files[0]})\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({image_original:reader.result})\n\n    }\n    reader.readAsDataURL(this.uploadInput.files[0])\n\n    data.append('file', this.uploadInput.files[0]);\n    // data.append('filename', this.fileName.value);\n    var response_image;\n\n    fetch('https://piclab.ai/foodclassification2020/classify', {\n          method: 'POST',\n          body: data,\n        })\n        .then(response => response.blob())\n        .then(response => response.blob())\n        .then(\n          img => {\n            console.log(img)\n            // this.setState({image:img})\n            response_image = URL.createObjectURL(img)\n            console.log(response_image)\n\n            this.setState({image_response:response_image})\n          }\n        )\n   \n    \n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleUploadImage}>\n        <div>\n          <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" onChange={(e)=>this._handleImageChange(e)}/>\n        </div>\n       \n        <br />\n        {/* <div>\n          <button>Upload</button>\n        </div> */}\n        \n        <img src={this.state.image_original} width=\"512\" height=\"512\"/>\n        <img src={this.state.image_response} width=\"512\" height=\"512\"/>\n      </form>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}