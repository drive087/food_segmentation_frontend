{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thusk/Documents/CP/Senior Project/frontend/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css'; // function getSegmentImage(){\n// }\n\nfunction Dashboard() {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [file, setFile] = useState(null); // var $imagePreview = null;\n  // if (image) {\n  // $imagePreview = (<img src={image} />);\n  // } else {\n  // $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n  // }\n\n  function onSegmentation(img) {\n    const formData = new FormData();\n    formData.append(\"file\", img);\n    axios.post('/api');\n  }\n\n  function _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      // this.setState({\n      //     file: file,\n      //     imagePreviewUrl: reader.result\n      // });\n      setImage(reader.result);\n      setFile(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"previewComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"fileInput\",\n        type: \"file\",\n        onChange: e => _handleImageChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgPreview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }, this);\n}\n\n_s(Dashboard, \"a43LepEHi+azUmYCoFPhIgsFyak=\");\n\n_c = Dashboard;\nexport default Dashboard; // class ImageUpload extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {file: '',imagePreviewUrl: ''};\n//     }\n//     _handleSubmit(e) {\n//       e.preventDefault();\n//       // TODO: do something with -> this.state.file\n//       console.log('handle uploading-', this.state.file);\n//     }\n//     _handleImageChange(e) {\n//       e.preventDefault();\n//       let reader = new FileReader();\n//       let file = e.target.files[0];\n//       reader.onloadend = () => {\n//         this.setState({\n//           file: file,\n//           imagePreviewUrl: reader.result\n//         });\n//       }\n//       reader.readAsDataURL(file)\n//     }\n//     render() {\n//       let {imagePreviewUrl} = this.state;\n//       let $imagePreview = null;\n//       if (imagePreviewUrl) {\n//         $imagePreview = (<img src={imagePreviewUrl} />);\n//       } else {\n//         $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n//       }\n//       return (\n//         <div className=\"previewComponent\">\n//           <form onSubmit={(e)=>this._handleSubmit(e)}>\n//             <input className=\"fileInput\" \n//               type=\"file\" \n//               onChange={(e)=>this._handleImageChange(e)} />\n//             <button className=\"submitButton\" \n//               type=\"submit\" \n//               onClick={(e)=>this._handleSubmit(e)}>Upload Image</button>\n//           </form>\n//           <div className=\"imgPreview\">\n//             {$imagePreview}\n//           </div>\n//         </div>\n//       )\n//     }\n//   }\n//   ReactDOM.render(<ImageUpload/>, document.getElementById(\"mainApp\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/thusk/Documents/CP/Senior Project/frontend/src/Dashboard.js"],"names":["React","useState","useEffect","Component","axios","Dashboard","image","setImage","file","setFile","onSegmentation","img","formData","FormData","append","post","_handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP,C,CAEA;AAEA;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC,CAHgB,CAKhB;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASS,cAAT,CAAwBC,GAAxB,EAA4B;AAExB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,GAAxB;AAEAP,IAAAA,KAAK,CAACW,IAAN,CAAW,MAAX;AACH;;AAED,WAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,QAAIZ,IAAI,GAAGS,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AAEAH,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACzB;AACA;AACA;AACA;AACAhB,MAAAA,QAAQ,CAACY,MAAM,CAACK,MAAR,CAAR;AACAf,MAAAA,OAAO,CAACD,IAAD,CAAP;AACC,KAPD;;AASAW,IAAAA,MAAM,CAACM,aAAP,CAAqBjB,IAArB;AACH;;AAED,sBACY;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGS,CAAD,IAAKD,kBAAkB,CAACC,CAAD;AAFnC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACE,QAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACA;AAAK,QAAA,GAAG,EAAEX;AAAV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAeH;;GAtDQD,S;;KAAAA,S;AAwDT,eAAeA,SAAf,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React , { useState, useEffect, Component } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css'\n\n// function getSegmentImage(){\n\n// }\n\nfunction Dashboard(){\n\n    const [image, setImage] = useState(null);\n    const [file, setFile] = useState(null);\n    \n    // var $imagePreview = null;\n    // if (image) {\n    // $imagePreview = (<img src={image} />);\n    // } else {\n    // $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n    // }\n\n    function onSegmentation(img){\n        \n        const formData = new FormData();\n\n        formData.append(\"file\", img);\n\n        axios.post('/api')\n    }\n\n    function _handleImageChange(e) {\n        e.preventDefault();\n    \n        let reader = new FileReader();\n        let file = e.target.files[0];\n    \n        reader.onloadend = () => {\n        // this.setState({\n        //     file: file,\n        //     imagePreviewUrl: reader.result\n        // });\n        setImage(reader.result)\n        setFile(file)\n        }\n    \n        reader.readAsDataURL(file)\n    }\n\n    return (\n                <div className=\"previewComponent\">\n                  <form>\n                    <input className=\"fileInput\" \n                      type=\"file\" \n                      onChange={(e)=>_handleImageChange(e)} />\n                    <button className=\"submitButton\" \n                      type=\"submit\" \n                      >Upload Image</button>\n                  </form>\n                  <div className=\"imgPreview\">\n                  <img src={image} />\n                  </div>\n                </div>\n              )\n}\n    \nexport default Dashboard;\n\n\n// class ImageUpload extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {file: '',imagePreviewUrl: ''};\n//     }\n  \n//     _handleSubmit(e) {\n//       e.preventDefault();\n//       // TODO: do something with -> this.state.file\n//       console.log('handle uploading-', this.state.file);\n//     }\n  \n//     _handleImageChange(e) {\n//       e.preventDefault();\n  \n//       let reader = new FileReader();\n//       let file = e.target.files[0];\n  \n//       reader.onloadend = () => {\n//         this.setState({\n//           file: file,\n//           imagePreviewUrl: reader.result\n//         });\n//       }\n  \n//       reader.readAsDataURL(file)\n//     }\n  \n//     render() {\n//       let {imagePreviewUrl} = this.state;\n//       let $imagePreview = null;\n//       if (imagePreviewUrl) {\n//         $imagePreview = (<img src={imagePreviewUrl} />);\n//       } else {\n//         $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n//       }\n  \n//       return (\n//         <div className=\"previewComponent\">\n//           <form onSubmit={(e)=>this._handleSubmit(e)}>\n//             <input className=\"fileInput\" \n//               type=\"file\" \n//               onChange={(e)=>this._handleImageChange(e)} />\n//             <button className=\"submitButton\" \n//               type=\"submit\" \n//               onClick={(e)=>this._handleSubmit(e)}>Upload Image</button>\n//           </form>\n//           <div className=\"imgPreview\">\n//             {$imagePreview}\n//           </div>\n//         </div>\n//       )\n//     }\n//   }\n    \n//   ReactDOM.render(<ImageUpload/>, document.getElementById(\"mainApp\"));"]},"metadata":{},"sourceType":"module"}